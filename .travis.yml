---
sudo: required
dist: bionic
env:
  global:
  - VAGRANT_VERSION="2.2.9"
  - KUBECTL_VERSION=1.18.3
  - KUBERNETES_VERSION=1.18.3
  - MINIKUBE_VERSION=1.8.3
  - CHANGE_MINIKUBE_NONE_USER=true #(bool) automatically change ownership of ~/.minikube to the value of $SUDO_USER https://minikube.sigs.k8s.io/docs/handbook/config/
  - MINIKUBE_WANTREPORTERRORPROMPT=false
  - MINIKUBE_WANTUPDATENOTIFICATION=false #(bool) sets whether the user wants an update notification for new minikube versions https://minikube.sigs.k8s.io/docs/handbook/config
  - MINIKUBE_HOME=$HOME #(string) sets the path for the .minikube directory that minikube uses for state/configuration. Please note: this is used only by minikube https://minikube.sigs.k8s.io/docs/handbook/config
  - KUBECONFIG=$HOME/.kube/config
notifications:
  slack:
    on_failure: always
fleet_script_tasks : &fleet_script_tasks
      script:
        - python --version
fleet_install_tasks : &fleet_install_tasks
      install:
        - pip install -r requirements.txt
jobs:
  include:
  - stage: "blue"
    matrix:
      fast_finish: true
      include:
        - name: "blue green minikube latest  Python 3.7 on bionic amd64" #OK
          dist: bionic
          arch: amd64
          addons:
               snaps:
                 - name: kubectl
                   confinement: classic
                   channel: latest/stable
          language: python
          python: 3.7
          before_install:
            - pip3 install virtualenv
            - virtualenv -p $(which python3) ~venvpy3
            - source ~venvpy3/bin/activate
          <<: *fleet_install_tasks
          <<: *fleet_script_tasks
          # <<: *fleet_script_minikube_latest_tasks
          after_success:
            - deactivate
  - stage: "green"
    matrix:
      fast_finish: true
      include:
        - name: "blue green minikube latest  Python 3.7 on bionic amd64" #OK
          dist: bionic
          arch: amd64
          addons:
               snaps:
                 - name: kubectl
                   confinement: classic
                   channel: latest/stable
          language: python
          python: 3.7
          before_install:
            - pip3 install virtualenv
            - virtualenv -p $(which python3) ~venvpy3
            - source ~venvpy3/bin/activate
          <<: *fleet_install_tasks
          <<: *fleet_script_tasks
          # <<: *fleet_script_minikube_latest_tasks
          after_success:
            - deactivate
  - stage: "staging"
    matrix:
      fast_finish: true
      include:
        - name: "blue green minikube latest  Python 3.7 on bionic amd64" #OK
          dist: bionic
          arch: amd64
          addons:
               snaps:
                 - name: kubectl
                   confinement: classic
                   channel: latest/stable
          language: python
          python: 3.7
          before_install:
            - pip3 install virtualenv
            - virtualenv -p $(which python3) ~venvpy3
            - source ~venvpy3/bin/activate
          <<: *fleet_install_tasks
          <<: *fleet_script_tasks
          # <<: *fleet_script_minikube_latest_tasks
          after_success:
            - deactivate
