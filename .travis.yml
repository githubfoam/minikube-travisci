---
sudo: required
dist: bionic

notifications:
  slack:
    on_failure: always

matrix:
  fast_finish: true
  include:

    # #To further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.
    # - name: "openebs minikube snaps only latest  Python 3.7 on bionic amd64" # NOT OK
    #   dist: bionic
    #   arch: amd64
    #   addons:
    #     snaps:
    #       - name: helm
    #         confinement: classic
    #         channel: latest/stable
    #       - name: kubectl
    #         confinement: classic
    #         channel: latest/stable
    #       - name: minikube
    #         confinement: classic
    #         channel: latest/stable
    #   language: python
    #   python: 3.7
    #   before_install:
    #     - pip3 install virtualenv
    #     - virtualenv -p $(which python3) ~venvpy3
    #     - source ~venvpy3/bin/activate
    #   script:
    #     # - sudo make deploy-minikube
    #     - sudo make deploy-openesb #OK
    #   after_success:
    #     - deactivate

    - name: "openebs minikube latest  Python 3.7 on bionic amd64" #OK
      dist: bionic
      arch: amd64
      addons:
        snaps:
          - name: helm
            confinement: classic
            channel: latest/stable
          - name: kubectl
            confinement: classic
            channel: latest/stable
          - name: minikube
            confinement: classic
            channel: latest/stable
      language: python
      python: 3.7
      before_install:
        - pip3 install virtualenv
        - virtualenv -p $(which python3) ~venvpy3
        - source ~venvpy3/bin/activate
      script:
        - sudo make deploy-minikube
        - sudo make deploy-openesb #OK
      after_success:
        - deactivate

    # - name: "java app minikube latest  Python 3.7 on bionic amd64" #OK
    #   dist: bionic
    #   arch: amd64
    #   language: python
    #   python: 3.7
    #   before_install:
    #     - pip3 install virtualenv
    #     - virtualenv -p $(which python3) ~venvpy3
    #     - source ~venvpy3/bin/activate
    #   before_script:
    #     - export MAVEN_MAJOR="3"
    #     - export MAVEN_VERSION="3.5.0"
    #     # - export MAVEN_VERSION=$MAVEN_MAJOR".6.3" #
    #     # - wget -nv https://archive.apache.org/dist/maven/maven-3/3.5.0/binaries/apache-maven-3.5.0-bin.tar.gz
    #     - wget -nv https://archive.apache.org/dist/maven/maven-$MAVEN_MAJOR/$MAVEN_VERSION/binaries/apache-maven-$MAVEN_VERSION-bin.tar.gz
    #     - tar zxf apache-maven-3.5.0-bin.tar.gz
    #     - export M2_HOME=$PWD/apache-maven-3.5.0
    #     - export PATH=$M2_HOME/bin:$PATH
    #     - mvn -version
    #   script:
    #     #https://github.com/travis-ci/travis-ci/issues/8932
    #     # - travis_wait 15 sudo make deploy-java-maven &
    #     - mvn -version
    #     - git clone https://github.com/aws-samples/kubernetes-for-java-developers.git
    #     - cd kubernetes-for-java-developers/app/
    #     - mvn org.springframework.boot:spring-boot-maven-plugin:run
    #     - mvn spring-boot:run
    #     # - sudo make deploy-java-maven
    #   after_success:
    #     - deactivate
