---
sudo: required
dist: bionic
notifications:
  slack:
    on_failure: always
matrix:
  fast_finish: true
  include:

# =============================================macOS=============================================

# TESTED OK
    - name: "deploy minikube docker kubernetes helm hyperkit w homebrew on macOS 10.15.7 osx xcode12.2"
      os: osx
      osx_image:
        - xcode12.2 #macOS 10.15.7
      addons:
        homebrew:
          packages:
          - hyperkit
          - virtualbox
          - docker
          - kubernetes-cli 
          - minikube                   
          - kubernetes-helm
          update: true
      language: java
      before_install:
        - pip3 install virtualenv
        - virtualenv -p $(which python3) ~venvpy3
        - source ~venvpy3/bin/activate
        - python --version
        - pip install -r requirements.txt
        - rvm install "ruby-2.4.5"
      script:
      - minikube version
      - kubectl version --client
      - helm version
      after_success:
        - deactivate

#
#     - name: "vbox vagrant    Python 2.7.17 on macOS 10.15.4 osx xcode11.5" #installer: Error - Your CPU does not have the features necessary for Multipass. Installation cannot proceed.
#       os: osx
#       osx_image: xcode11.5
#       language: shell
#       addons:
#         homebrew:
#           packages:
#           - beanstalk
#           update: true
#       # addons:
#       #   homebrew:
#       #     # brewfile: Brewfile.travis
#       #     # packages:
#       #     #   - multipass
#       #     # taps: homebrew/cask-versions
#       #     casks: # Installing Casks
#       #       - multipass
#       #     update: true
#       before_install:
#         - pip install virtualenv
#         - virtualenv -p $(which python2) ~venvpy2
#         - source ~venvpy2/bin/activate
#       <<: *fleet_install_tasks
#       <<: *fleet_script_tasks
#       script:
#         # - /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)" #Install Homebrew
#         # - brew cask install multipass
#         # - multipass version
#         - brew cask install vagrant
#         - brew cask install virtualbox
#         - brew list --versions
#         - vagrant box add "bento/centos-8.0" --provider=virtualbox
#         - vagrant init
#         - vagrant up
#         - vagrant ssh -c "hostnamectl"
#         - vagrant destroy -f
#         # - sudo multipass set local.driver=virtualbox #If you’d like to use VirtualBox, run the following in the terminal after installing Multipass
#       after_success:
#         - brew cask uninstall multipass
#         - deactivate
#
#
#     - name: "docker docker-machine vbox  Python 2.7.17 on macOS 10.15.4 osx xcode11.5" #installer: Error - Your CPU does not have the features necessary for Multipass. Installation cannot proceed.
#       os: osx
#       osx_image: xcode11.5
#       language: shell
#       addons:
#         homebrew:
#           packages:
#           - beanstalk
#           update: true
#       # addons:
#       #   homebrew:
#       #     # brewfile: Brewfile.travis
#       #     # packages:
#       #     #   - multipass
#       #     # taps: homebrew/cask-versions
#       #     casks: # Installing Casks
#       #       - multipass
#       #     update: true
#       before_install:
#         - pip install virtualenv
#         - virtualenv -p $(which python2) ~venvpy2
#         - source ~venvpy2/bin/activate
#       <<: *fleet_install_tasks
#       <<: *fleet_script_tasks
#       script:
#         # - /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)" #Install Homebrew
#         # - brew cask install multipass
#         # - multipass version
#         - brew install docker docker-machine
#         - docker --version
#         - brew cask install virtualbox
#         - brew list --versions
#         - docker-machine create --driver virtualbox default
#         - docker-machine ls
#         - docker-machine env default
#         - eval "$(docker-machine env default)"
#         - docker run hello-world
#         - docker-machine stop default
#         # - sudo multipass set local.driver=virtualbox #If you’d like to use VirtualBox, run the following in the terminal after installing Multipass
#       after_success:
#         - brew cask uninstall multipass
#         - deactivate
#
#
#     #The default backend on macOS is hyperkit, wrapping Apple’s Hypervisor.framework
#     #You need macOS Yosemite, version 10.10.3 or later installed on a 2010 or newer Mac
#     #https://multipass.run/docs/installing-on-macos
#     #https://docs.travis-ci.com/user/reference/osx/#macos-version
#     - name: "microk8s Multipass Python 2.7.17 on macOS 10.15.4 osx xcode11.5" #installer: Error - Your CPU does not have the features necessary for Multipass. Installation cannot proceed.
#       os: osx
#       osx_image: xcode11.5
#       language: shell
#       addons:
#         homebrew:
#           packages:
#           - beanstalk
#           update: true
#       # addons:
#       #   homebrew:
#       #     # brewfile: Brewfile.travis
#       #     # packages:
#       #     #   - multipass
#       #     # taps: homebrew/cask-versions
#       #     casks: # Installing Casks
#       #       - multipass
#       #     update: true
#       before_install:
#         - pip install virtualenv
#         - virtualenv -p $(which python2) ~venvpy2
#         - source ~venvpy2/bin/activate
#       <<: *fleet_install_tasks
#       <<: *fleet_script_tasks
#       script:
#         # - /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)" #Install Homebrew
#         # - brew cask install multipass
#         # - multipass version
#         - brew list --versions
#         # - sudo multipass set local.driver=virtualbox #If you’d like to use VirtualBox, run the following in the terminal after installing Multipass
#       after_success:
#         # - brew cask uninstall multipass
#         - deactivate
#
#     - name: "microk8s Multipass cluster1 Python 2.7.17 on macOS 10.15.4 osx xcode11.5" #installer: Error - Your CPU does not have the features necessary for Multipass. Installation cannot proceed.
#       os: osx
#       osx_image: xcode11.5
#       language: shell
#       addons:
#         homebrew:
#           casks: #Installing Casks
#           - dotnet-sdk
#       # addons:
#       #   homebrew:
#       #     # brewfile: Brewfile.travis
#       #     # packages:
#       #     #   - multipass
#       #     # taps: homebrew/cask-versions
#       #     casks: # Installing Casks
#       #       - multipass
#       #     update: true
#       before_install:
#         - pip install virtualenv
#         - virtualenv -p $(which python2) ~venvpy2
#         - source ~venvpy2/bin/activate
#       <<: *fleet_install_tasks
#       <<: *fleet_script_tasks
#       script:
#         # - /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)" #Install Homebrew
#         # - brew cask install multipass
#         # - multipass version
#         # - sh-keygen -b 2048 -f ~/.ssh/multipass -t rsa -q -N "" #create a ssh key
#         # - cat ~/.ssh/multipass.pub >> cloud-init.yaml #provide the ssh public key to cloud-init file in order to ssh into multipass vm with ssh private key
#         # - sudo multipass set local.driver=virtualbox #If you’d like to use VirtualBox, run the following in the terminal after installing Multipass
#         - brew list --versions
#       after_success:
#         - brew cask uninstall multipass
#         - deactivate
# #
# # https://multipass.run/docs/installing-on-macos
# # https://microk8s.io/#get-started
#     - name: "Installing Multipass on macOS 10.15.4 osx xcode11.5" #installer: Error - Your CPU does not have the features necessary for Multipass. Installation cannot proceed.
#       os: osx
#       osx_image: xcode11.5
#       language: shell
#       addons:
#         homebrew:
#           casks: #Installing Casks
#           # - dotnet-sdk #OK
#           - multipass
#       # addons:
#       #   homebrew:
#       #     # brewfile: Brewfile.travis
#       #     # packages:
#       #     #   - multipass
#       #     # taps: homebrew/cask-versions
#       #     casks: # Installing Casks
#       #       - multipass
#       #     update: true
#       before_install:
#         - pip install virtualenv
#         - virtualenv -p $(which python2) ~venvpy2
#         - source ~venvpy2/bin/activate
#       <<: *fleet_install_tasks
#       <<: *fleet_script_tasks
#       script:
#         # - /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)" #Install Homebrew
#         - brew cask install multipass
#         - multipass version
#         - sudo multipass launch --name microk8s-vm --mem 4G --disk 40G
#         - sudo multipass shell microk8s-vm #Enter the VM instance
#         - sudo snap install microk8s --classic
#         - sudo microk8s status --wait-ready
#         - sudo microk8s enable dns dashboard registry #Turn on standard services
#         - brew list --versions
#       after_success:
#         - brew cask uninstall multipass
#         - deactivate
#
#
#     - name: "Multipass microk8s cluster2 Python 2.7.17 on macOS 10.15.4 osx xcode11.5" #installer: Error - Your CPU does not have the features necessary for Multipass. Installation cannot proceed.
#       os: osx
#       osx_image: xcode11.5
#       language: shell
#       addons:
#         homebrew:
#           casks: #Installing Casks
#           - dotnet-sdk
#       # addons:
#       #   homebrew:
#       #     # brewfile: Brewfile.travis
#       #     # packages:
#       #     #   - multipass
#       #     # taps: homebrew/cask-versions
#       #     casks: # Installing Casks
#       #       - multipass
#       #     update: true
#       before_install:
#         - pip install virtualenv
#         - virtualenv -p $(which python2) ~venvpy2
#         - source ~venvpy2/bin/activate
#       <<: *fleet_install_tasks
#       <<: *fleet_script_tasks
#       script:
#         # - /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)" #Install Homebrew
#         - brew cask install multipass
#         - multipass version
#         - multipass find #returns a list of the available images
#         - sudo multipass launch ubuntu
#         - sudo multipass launch 16.04
#         - multipass list #list instances
#         # - multipass shell rewarded-stud #connect to a running instance,find its instance name with the list option
#         #run commands in an instance indirectly without connecting directly to the instance with the exec option, and the command separated with a double dash (--)
#         # install MicroK8s as a snap on your Multipass-hosted Ubuntu instance
#         # - multipass exec rewarded-stud -- ls -a
#         # - multipass exec rewarded-stud -- sudo snap install microk8s --classic #Alternatively,without connecting to the instance, install MicroK8
#         # - multipass exec rewarded-stud -- sudo microk8s.start  #Alternatively,without connecting to the instance,start MicroK8
#         # - multipass exec rewarded-stud -- /snap/bin/microk8s.start #Alternatively,without connecting to the instance,start MicroK8
#         # - multipass exec rewarded-stud -- sudo usermod -a -G microk8s multipass #Alternatively,without connecting to the instance, add the multipass user to the microk8s group, so it has permissions to run and access the services needed
#         # - multipass exec intrigued-kudu -- /snap/bin/microk8s.kubectl cluster-info #Alternatively,without connecting to the instance,see what services are running on the Kubernetes cluster,Replace “127.0.0.1” with the IP of the VM, and you should be able to access services as usual
#         # - multipass exec intrigued-kudu -- /snap/bin/microk8s.config > kubeconfig #Alternatively,without connecting to the instance,copy the kubeconfig file from the instance to the host multipass installed
#         # - kubectl --kubeconfig=kubeconfig get all --all-namespaces #use the new config to access Kubernetes running on the instance
#         # - sudo multipass stop rewarded-stud
#         # - sudo multipass delete rewarded-stud
#         # - sudo multipass purge #to completely remove all deleted instances and images
#         # - sh-keygen -b 2048 -f ~/.ssh/multipass -t rsa -q -N "" #create a ssh key
#         # - cat ~/.ssh/multipass.pub >> cloud-init.yaml #provide the ssh public key to cloud-init file in order to ssh into multipass vm with ssh private key
#         # - sudo multipass set local.driver=virtualbox #If you’d like to use VirtualBox, run the following in the terminal after installing Multipass
#         - brew list --versions
#       after_success:
#         - brew cask uninstall multipass
#         - deactivate
#
#
#     - name: "microk8s Python 2.7.17 on macOS 10.14.6osx xcode11.3"
#       os: osx
#       osx_image: xcode11.3
#       language: shell
#       addons:
#         homebrew:
#           taps: homebrew/cask-versions #Installing From Taps
#           casks: java8
#       # addons:
#       #   homebrew:
#       #     casks:
#       #       - mactex
#       #     packages:
#       #       - multipass
#       before_install:
#         - pip install virtualenv
#         - virtualenv -p $(which python2) ~venvpy2
#         - source ~venvpy2/bin/activate
#       <<: *fleet_install_tasks
#       <<: *fleet_script_tasks
#       # <<: *fleet_script_microk8s_macos_tasks
#       script:
#         - brew list --versions
#       after_success:
#         - deactivate
#
#
#     # - name: "Python 3.7.5 on macOS xcode10.2"
#     #   os: osx
#     #   osx_image: xcode10.2
#     #   language: shell
#     #   before_install:
#     #     - pip3 install virtualenv
#     #     - virtualenv -p $(which python3) ~venvpy3
#     #     - source ~venvpy3/bin/activate
#     #   <<: *fleet_install_tasks
#     #   <<: *fleet_script_tasks
#     #   after_success:
#     #     - deactivate
#     #
#     # - name: "Python 3.7.5 on macOS xcode9.4 "
#     #   os: osx
#     #   osx_image: xcode9.4
#     #   language: shell
#     #   before_install:
#     #     - pip3 install virtualenv
#     #     - virtualenv -p $(which python3) ~venvpy3
#     #     - source ~venvpy3/bin/activate
#     #   <<: *fleet_install_tasks
#     #   <<: *fleet_script_tasks
#     #   after_success:
#     #     - deactivate
